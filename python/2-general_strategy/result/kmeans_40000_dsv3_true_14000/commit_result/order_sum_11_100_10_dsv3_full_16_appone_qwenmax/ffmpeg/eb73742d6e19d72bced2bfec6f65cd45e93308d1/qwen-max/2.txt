static void update(Real288_internal *glob)
{
    int x;
    float buffer1[40], temp1[37];
    float buffer2[8], temp2[11];

    // Precompute the starting index for buffer1
    int y1 = glob->phasep + 5;
    int y1_mod = y1 % 40; // Initial modulo value for buffer1

    for (x = 0; x < 40; x++) {
        buffer1[x] = glob->output[y1_mod];
        y1_mod = (y1_mod + 1) % 40; // Efficiently update modulo value
    }

    co(36, 40, 35, buffer1, temp1, glob->st1a, glob->st1b, table1);

    if (pred(temp1, glob->st1, 36))
        colmult(glob->pr1, glob->st1, table1a, 36);

    // Precompute the starting index for buffer2
    int y2 = glob->phase + 1;
    int y2_mod = y2 % 8; // Initial modulo value for buffer2

    for (x = 0; x < 8; x++) {
        buffer2[x] = glob->history[y2_mod];
        y2_mod = (y2_mod + 1) % 8; // Efficiently update modulo value
    }

    co(10, 8, 20, buffer2, temp2, glob->st2a, glob->st2b, table2);

    if (pred(temp2, glob->st2, 10))
        colmult(glob->pr2, glob->st2, table2a, 10);
}